apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "io.github.anthonyeef.cattle"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "0.1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        if (System.getenv("TRAVIS") || System.getenv("CI")) {
            def key = '\"' + (System.getenv("API_KEY")) + '\"'
            def secret = '\"' + (System.getenv("API_SECRET")) + '\"'
            buildConfigField "String", "API_KEY", key
            buildConfigField "String", "API_SECRET", secret
        } else {
            buildConfigField("String", "API_KEY", API_KEY)
            buildConfigField("String", "API_SECRET", API_SECRET)
        }

        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        abortOnError true
        warning 'InvalidPackage'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Local unit tests
    testImplementation(deps.espresso.core, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testImplementation deps.mockito
    testImplementation deps.junit

    // Android unit test
    androidTestImplementation deps.mockito
    androidTestImplementation deps.junit

    // Espresso UI test
    androidTestImplementation(deps.espresso.core, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation deps.espresso.contrib
    androidTestImplementation deps.espresso.intents

    implementation deps.espresso.idling
    implementation deps.support.compat_v7
    implementation deps.support.design
    implementation deps.support.preference_v7
    implementation deps.support.preference_v14

    implementation deps.arch.room
    kapt deps.arch.room_compiler
    implementation deps.arch.room_rx
    implementation deps.arch.life_extension
    implementation deps.arch.life_rx

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31"
    implementation deps.ktx

    implementation deps.retrofit
    implementation deps.retrofit_rxjava_adapter
    implementation deps.gson_converter
    implementation deps.log
    implementation deps.rxscalars

    implementation deps.rxjava
    implementation deps.rxandroid
    implementation deps.rxrelay

    implementation deps.glide_okhttp
    implementation deps.glide
    kapt deps.glide_compiler
    implementation deps.circleimage


    implementation deps.autoDispose
    implementation deps.autoDispose_android
    implementation deps.autoDispose_android_arch
    implementation deps.autoDispose_kotlin

    implementation deps.multitype.lib, { exclude group: 'com.android.support' }
    implementation deps.multitype.kotlin, {
        exclude group: 'com.android.support'
        exclude group: 'org.jetbrains.kotlin'
    }

    implementation deps.constraintlayout, { exclude group: 'com.android.support' }
    implementation deps.prettytime
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation('com.crashlytics.sdk.android:answers:1.4.1@aar') {
        transitive = true
    }
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.2') {
        transitive = true
    }
}
repositories {
    mavenCentral()
    google()
}
